
version: 2
jobs:
  build-and-test:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/domini

    steps:
      - checkout

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "requirements.txt" }}
        
      - run:
          name: run unit tests
          command: |
            . venv/bin/activate
            python -m pytest -v tests/unit

      - run:
          name: run integration tests
          command: |
            . venv/bin/activate
            python -m pytest -v tests/integration

  deploy:
    docker:
      - image: circleci/python:3.6.1

    working_directory: ~/domini

    steps:
      - checkout

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v2-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: populate environment variables from circleci envvar into zappa_settings
          command: |
            . venv/bin/activate
            python envvar_helper.py dev MY_ACCESS_KEY_ID $AWS_ACCESS_KEY_ID zappa_settings.json
            python envvar_helper.py dev MY_SECRET_ACCESS_KEY $AWS_SECRET_ACCESS_KEY zappa_settings.json
            python envvar_helper.py dev TWILIO_ACCOUNT_SID $TWILIO_ACCOUNT_SID zappa_settings.json
            python envvar_helper.py dev TWILIO_AUTH_TOKEN $TWILIO_AUTH_TOKEN zappa_settings.json
            python envvar_helper.py dev TWILIO_FROM_NUMBER $TWILIO_FROM_NUMBER zappa_settings.json
            python envvar_helper.py dev GA_TRACKING_ID $GA_TRACKING_ID zappa_settings.json

      - run:
          name: deploy to aws using zappa (update existing)
          command: |
            . venv/bin/activate
            
            # without explicit unschedule, update command does not remove
            # any deployed schedule which was removed from zappa_settings
            
            zappa unschedule dev
            
            # update command also deploys any undeployed schedule
            # and updates existing schedule (eg frequency)
            
            zappa update dev

      - run:
          name: deploy to aws using zappa (deploy for first time)
          command: |
            . venv/bin/activate

            # deploy command deploys functions, api gateway and schedules
            # calling this on already deployed project will fail the job
            # this is for fallback for first time deploy
            # as workaround, rerun the workflow if this fails

            zappa deploy dev
          when: on_fail

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build-and-test
      - deploy:
          requires:
            - build-and-test

